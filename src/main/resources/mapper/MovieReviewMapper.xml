<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.gdfm.movie.mapper.MovieReviewMapper">

	<select id="MovieReviewCount" resultType="int"> 
		  select 
		  		* 
		  from movie_review
	</select>
	
	<!-- 중복 체크  -->
	<select id="duplicationChk" parameterType="map" resultType="int">
		select count(*)
		from movie_review
		where mem_id=#{mem_id}
		and movie_id=#{movie_id}
		AND review_del_yn='N'
	</select>
	
	<insert id="insertUpDown" parameterType="map">
	insert into movie_review_updown_history(
		updown_id,
		movie_review_id,
		updown_info,
		mem_id
	)
	values(
		movie_review_updown_histor_seq.nextval,
		#{movie_review_id},
		#{updown_info},
		#{mem_id}
	)
	</insert>
	
	
	
	<!-- 댓글 등록 -->
	
	<insert id="movieReviewInsert" parameterType="kr.co.gdfm.movie.model.MovieReview">
	<selectKey keyProperty="movie_review_id" resultType="int" order="BEFORE">
	select movie_review_seq.nextval from dual
	</selectKey>
		INSERT INTO 
		movie_review 
			(
    movie_review_id,
    movie_id,
    mem_id,
    movie_review_content,
    movie_review_rate
   
			) 
		VALUES (
    #{movie_review_id},
    #{movie_id},
    #{mem_id},
    #{movie_review_content},
    #{movie_review_rate}
    
			)
	</insert>
		
		<select id="selectReviewList" parameterType="int" resultType="kr.co.gdfm.movie.model.MovieReview">
		   select c.*, nvl(d.추천수,0) as thumbUpCnt ,nvl(d.비추천수,0) as thumbDownCnt  
			    from movie_review c left join 
			    (
			    select
			    nvl(a.movie_review_id,b.movie_review_id) as movie_review_id,
			    nvl(a.추천수,0)as 추천수, nvl(b.비추천수,0) as 비추천수 
			    from   (
			    select movie_review_id, count(*)as 추천수
			    from movie_review_updown_history
			    where updown_info ='U'
			    group by movie_review_id
			    ) a full outer join
			    (   select movie_review_id, count(*) as 비추천수 
			    from movie_review_updown_history
			    where updown_info = 'D'
			  group by movie_review_id
			    ) b
			    on(a.movie_review_id = b.movie_review_id)
			    ) d    
			on(c.movie_review_id = d.movie_review_id)
			where c.movie_id = #{movie_id}
			and c.review_del_yn = 'N'
			order by c.review_reg_date asc
		</select>

		<update id="movieReviewDelete" parameterType="kr.co.gdfm.movie.model.MovieReview" >
			update movie_review
			set review_del_yn='Y'
			where movie_review_id = #{movie_review_id}
		</update>
		
		<update id="movieReviewUpdate" parameterType="kr.co.gdfm.movie.model.MovieReview">
			update movie_review
			set  movie_review_content = #{movie_review_content}
			where movie_review_id = #{movie_review_id}
		</update>
		
		





</mapper>
	
